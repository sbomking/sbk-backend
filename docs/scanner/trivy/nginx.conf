server {
    listen 10001 ssl;
    listen [::]:10001 ssl;
    http2 on;

    ssl_certificate /etc/ssl/certs/localhost-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/localhost-selfsigned.key;
    ssl_dhparam /etc/ssl/certs/dhparam-localhost.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;



    #location / {
    #    proxy_pass http://127.0.0.1:10000;
    #    proxy_set_header Host $host;
    #}

    #https://nginx.org/en/docs/http/ngx_http_grpc_module.html
    location / {
        grpc_pass grpc://127.0.0.1:10000;
        grpc_set_header Host $host:$server_port;
        # Optional: increase buffer sizes for gRPC
        proxy_buffer_size 128k;
        proxy_buffers 16 128k;
        proxy_busy_buffers_size 256k;
    }


        # gRPC endpoint (for Trivy CLI clients)
    #location /trivy.rpc.v1.Scanner {
    #    grpc_pass grpc://127.0.0.1:4954;
    #    grpc_set_header Host $host;
    #}
#
    ## HTTP endpoint (for REST/health checks, etc.)
    #location / {
    #    proxy_pass http://127.0.0.1:4954;
    #    proxy_set_header Host $host;
    #    proxy_set_header X-Forwarded-For $remote_addr;
    #}
}

#large_client_header_buffers
#
#client_header_buffer_size 16k;
#large_client_header_buffers 8 32k;
#
#
#    http2_max_field_size 80k;
#    http2_max_header_size 320k;
#    client_body_buffer_size 100m;
#    client_max_body_size 200m;
#    
#2025/10/19 14:25:49 [error] 38#38: *4 upstream sent too large http2 frame: 4740180 while reading response header from upstream, client: 10.89.0.13, server: , request: "POST /trivy.rpc.v1.Cache/PutBlob HTTP/2.0", upstream: "grpc://127.0.0.1:10000", host: "127.0.0.1:10001"
#https://github.com/kubernetes/ingress-nginx/issues/4323